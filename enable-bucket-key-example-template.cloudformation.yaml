Parameters:
  Prefix:
    Default: enable-bucket-key-example
    Type: String
Resources:
  EnableBucketKeyExampleBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref 'Prefix'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: false
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
  EnableBucketKeyExampleRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EnableBucketKeyExampleRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: EnableBucketKeyExamplePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Effect: Allow
                Resource: '*'
              - Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:ListBucket
                  - s3:PutObject
                Effect: Allow
                Resource: !Join
                  - ''
                  - - !GetAtt 'EnableBucketKeyExampleBucket.Arn'
                    - /*
  EnableBucketKeyExampleLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Join
        - ''
        - - !Ref 'Prefix'
          - -function
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 'EnableBucketKeyExampleRole.Arn'
      Runtime: python3.9
      Timeout: 900
      Code:
        ZipFile: "def handler(event, context):\n\tprint('hello from lambda')"
  EnableBucketKeyExampleBatchOpsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - ''
        - - !Ref 'Prefix'
          - -batch-ops
  EnableBucketKeyExampleBatchOpsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EnableBucketKeyExampleBatchOpsRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: batchoperations.s3.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: EnableBucketKeyExampleBatchOpsPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Join
                  - ''
                  - - !GetAtt 'EnableBucketKeyExampleLambdaFunction.Arn'
                    - :*
              - Action:
                  - s3:GetObject
                  - s3:GetObjectAcl
                  - s3:GetObjectTagging
                  - s3:ListBucket
                Effect: Allow
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref 'EnableBucketKeyExampleBucket'
                    - /*
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketLocation
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref 'EnableBucketKeyExampleBatchOpsBucket'
                    - /*
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref 'EnableBucketKeyExampleBatchOpsBucket'
                    - /*
